{"ast":null,"code":"import _classCallCheck from \"/Users/irshadvali/Documents/graphQL/graphql-react-playlist/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/irshadvali/Documents/graphQL/graphql-react-playlist/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/irshadvali/Documents/graphQL/graphql-react-playlist/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/irshadvali/Documents/graphQL/graphql-react-playlist/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/irshadvali/Documents/graphQL/graphql-react-playlist/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/irshadvali/Documents/graphQL/graphql-react-playlist/client/src/components/AddBook.js\";\nimport React, { Component } from 'react';\nimport { graphql, compose } from 'react-apollo';\nimport { getAuthorsQuery, addBookMutation, getBooksQuery } from '../queries/queries';\n\nvar AddBook =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddBook, _Component);\n\n  function AddBook(props) {\n    var _this;\n\n    _classCallCheck(this, AddBook);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddBook).call(this, props));\n    _this.state = {\n      name: '',\n      genre: '',\n      authorId: ''\n    };\n    return _this;\n  }\n\n  _createClass(AddBook, [{\n    key: \"displayAuthors\",\n    value: function displayAuthors() {\n      var data = this.props.getAuthorsQuery;\n\n      if (data.loading) {\n        return React.createElement(\"option\", {\n          disabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, \"Loading authors\");\n      } else {\n        return data.authors.map(function (author) {\n          return React.createElement(\"option\", {\n            key: author.id,\n            value: author.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 20\n            },\n            __self: this\n          }, author.name);\n        });\n      }\n    }\n  }, {\n    key: \"submitForm\",\n    value: function submitForm(e) {\n      e.preventDefault(); // use the addBookMutation\n\n      this.props.addBookMutation({\n        variables: {\n          name: this.state.name,\n          genre: this.state.genre,\n          authorId: this.state.authorId\n        },\n        refetchQueries: [{\n          query: getBooksQuery\n        }]\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"form\", {\n        id: \"add-book\",\n        onSubmit: this.submitForm.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Book name:\"), React.createElement(\"input\", {\n        type: \"text\",\n        onChange: function onChange(e) {\n          return _this2.setState({\n            name: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Genre:\"), React.createElement(\"input\", {\n        type: \"text\",\n        onChange: function onChange(e) {\n          return _this2.setState({\n            genre: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Author:\"), React.createElement(\"select\", {\n        onChange: function onChange(e) {\n          return _this2.setState({\n            authorId: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Select author\"), this.displayAuthors())), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"+\"));\n    }\n  }]);\n\n  return AddBook;\n}(Component);\n\nexport default compose(graphql(getAuthorsQuery, {\n  name: \"getAuthorsQuery\"\n}), graphql(addBookMutation, {\n  name: \"addBookMutation\"\n}))(AddBook);","map":{"version":3,"sources":["/Users/irshadvali/Documents/graphQL/graphql-react-playlist/client/src/components/AddBook.js"],"names":["React","Component","graphql","compose","getAuthorsQuery","addBookMutation","getBooksQuery","AddBook","props","state","name","genre","authorId","data","loading","authors","map","author","id","e","preventDefault","variables","refetchQueries","query","submitForm","bind","setState","target","value","displayAuthors"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { graphql, compose } from 'react-apollo';\nimport { getAuthorsQuery, addBookMutation, getBooksQuery } from '../queries/queries';\n\nclass AddBook extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            name: '',\n            genre: '',\n            authorId: ''\n        };\n    }\n    displayAuthors(){\n        var data = this.props.getAuthorsQuery;\n        if(data.loading){\n            return( <option disabled>Loading authors</option> );\n        } else {\n            return data.authors.map(author => {\n                return( <option key={ author.id } value={author.id}>{ author.name }</option> );\n            });\n        }\n    }\n    submitForm(e){\n        e.preventDefault()\n        // use the addBookMutation\n        this.props.addBookMutation({\n            variables: {\n                name: this.state.name,\n                genre: this.state.genre,\n                authorId: this.state.authorId\n            },\n            refetchQueries: [{ query: getBooksQuery }]\n        });\n    }\n    render(){\n        return(\n            <form id=\"add-book\" onSubmit={ this.submitForm.bind(this) } >\n                <div className=\"field\">\n                    <label>Book name:</label>\n                    <input type=\"text\" onChange={ (e) => this.setState({ name: e.target.value }) } />\n                </div>\n                <div className=\"field\">\n                    <label>Genre:</label>\n                    <input type=\"text\" onChange={ (e) => this.setState({ genre: e.target.value }) } />\n                </div>\n                <div className=\"field\">\n                    <label>Author:</label>\n                    <select onChange={ (e) => this.setState({ authorId: e.target.value }) } >\n                        <option>Select author</option>\n                        { this.displayAuthors() }\n                    </select>\n                </div>\n                <button>+</button>\n            </form>\n        );\n    }\n}\n\nexport default compose(\n    graphql(getAuthorsQuery, { name: \"getAuthorsQuery\" }),\n    graphql(addBookMutation, { name: \"addBookMutation\" })\n)(AddBook);"]},"metadata":{},"sourceType":"module"}