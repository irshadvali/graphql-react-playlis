{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/irshadvali/Documents/graphQL/graphql-react-playlist/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n{\\n    mutation{\\n            addBook(name:\\\"\\\",genre:\\\"\\\",authorId:\\\"){\\n               name\\n               id \\n            }\\n        }\\n}\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n{\\n  authors{\\n    name\\n    id\\n  }\\n}\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n{\\n  books{\\n    name\\n    id\\n  }\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql } from \"apollo-boost\";\nvar getBooksQuery = gql(_templateObject());\nvar getAuthorsQuery = gql(_templateObject2());\nvar addBookMutation = gql(_templateObject3()); // const addBookMutation=gql`\n// mutation{\n//     addBook(name:\"\",genre:\"\",authorId:\"){\n//        name\n//        id \n//     }\n// }\n// `\n\nexport { getAuthorsQuery, getBooksQuery, addBookMutation };","map":{"version":3,"sources":["/Users/irshadvali/Documents/graphQL/graphql-react-playlist/client/src/queries/queries.js"],"names":["gql","getBooksQuery","getAuthorsQuery","addBookMutation"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAQA,GAAR,QAAkB,cAAlB;AAEA,IAAMC,aAAa,GAACD,GAAD,mBAAnB;AAUA,IAAME,eAAe,GAACF,GAAD,oBAArB;AASA,IAAMG,eAAe,GAACH,GAAD,oBAArB,C,CAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAQE,eAAR,EAAwBD,aAAxB,EAAsCE,eAAtC","sourcesContent":["import {gql} from \"apollo-boost\";\n\nconst getBooksQuery=gql`\n{\n  books{\n    name\n    id\n  }\n}\n`\n\n\nconst getAuthorsQuery=gql`\n{\n  authors{\n    name\n    id\n  }\n}\n`\n\nconst addBookMutation=gql`\n{\n    mutation{\n            addBook(name:\"\",genre:\"\",authorId:\"){\n               name\n               id \n            }\n        }\n}\n`\n\n\n// const addBookMutation=gql`\n// mutation{\n//     addBook(name:\"\",genre:\"\",authorId:\"){\n//        name\n//        id \n//     }\n// }\n// `\n\nexport {getAuthorsQuery,getBooksQuery,addBookMutation}"]},"metadata":{},"sourceType":"module"}